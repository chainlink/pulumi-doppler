{
    "name": "doppler",
    "description": "A Pulumi package for creating and managing doppler cloud resources.",
    "keywords": [
        "pulumi",
        "doppler"
    ],
    "homepage": "https://doppler.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`terraform-provider-doppler` Terraform Provider](https://github.com/DopplerHQ/terraform-provider-terraform-provider-doppler).",
    "repository": "https://github.com/DopplerHQ/terraform-provider-doppler/",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "dopplerToken": {
                "type": "string",
                "description": "A Doppler token, either a personal or service token\n"
            },
            "host": {
                "type": "string",
                "description": "The Doppler API host (i.e. https://api.doppler.com)\n"
            },
            "verifyTls": {
                "type": "boolean",
                "description": "Whether or not to verify TLS\n"
            }
        },
        "defaults": [
            "dopplerToken"
        ]
    },
    "provider": {
        "description": "The provider type for the terraform-provider-doppler package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "dopplerToken": {
                "type": "string",
                "description": "A Doppler token, either a personal or service token\n"
            },
            "host": {
                "type": "string",
                "description": "The Doppler API host (i.e. https://api.doppler.com)\n"
            },
            "verifyTls": {
                "type": "boolean",
                "description": "Whether or not to verify TLS\n"
            }
        },
        "required": [
            "dopplerToken"
        ],
        "inputProperties": {
            "dopplerToken": {
                "type": "string",
                "description": "A Doppler token, either a personal or service token\n"
            },
            "host": {
                "type": "string",
                "description": "The Doppler API host (i.e. https://api.doppler.com)\n"
            },
            "verifyTls": {
                "type": "boolean",
                "description": "Whether or not to verify TLS\n"
            }
        },
        "requiredInputs": [
            "dopplerToken"
        ]
    },
    "resources": {
        "doppler:index/secret:Secret": {
            "properties": {
                "computed": {
                    "type": "string",
                    "description": "The computed secret value, after resolving secret references\n"
                },
                "config": {
                    "type": "string",
                    "description": "The name of the Doppler config\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Doppler secret\n"
                },
                "project": {
                    "type": "string",
                    "description": "The name of the Doppler project\n"
                },
                "value": {
                    "type": "string",
                    "description": "The raw secret value\n"
                }
            },
            "required": [
                "computed",
                "config",
                "name",
                "project",
                "value"
            ],
            "inputProperties": {
                "config": {
                    "type": "string",
                    "description": "The name of the Doppler config\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Doppler secret\n"
                },
                "project": {
                    "type": "string",
                    "description": "The name of the Doppler project\n"
                },
                "value": {
                    "type": "string",
                    "description": "The raw secret value\n"
                }
            },
            "requiredInputs": [
                "config",
                "project",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Secret resources.\n",
                "properties": {
                    "computed": {
                        "type": "string",
                        "description": "The computed secret value, after resolving secret references\n"
                    },
                    "config": {
                        "type": "string",
                        "description": "The name of the Doppler config\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Doppler secret\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "The name of the Doppler project\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The raw secret value\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "doppler:index/getSecrets:getSecrets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSecrets.\n",
                "properties": {
                    "config": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecrets.\n",
                "properties": {
                    "config": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "map": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "map",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/chainlink/pulumi-pulumi-doppler/sdk/go/pulumi-doppler"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing doppler cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/DopplerHQ/terraform-provider-terraform-provider-doppler)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-doppler` repo](https://github.com/pulumi/pulumi-doppler/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`DopplerHQ/terraform-provider-terraform-provider-doppler` repo](https://github.com/DopplerHQ/terraform-provider-terraform-provider-doppler/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/DopplerHQ/terraform-provider-terraform-provider-doppler)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-doppler` repo](https://github.com/pulumi/pulumi-doppler/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`DopplerHQ/terraform-provider-terraform-provider-doppler` repo](https://github.com/DopplerHQ/terraform-provider-terraform-provider-doppler/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}